// Generated by CoffeeScript 1.3.3
var FutonServer, MainController, express, querystring;

express = require('express');

querystring = require('querystring');

MainController = require('./main_controller');

FutonServer = (function() {

  function FutonServer() {
    this.app = express.createServer();
    this.main_controller = new MainController();
    this.configure(this.app);
  }

  FutonServer.prototype.configure = function(app) {
    app.configure(function() {
      app.use(express.methodOverride());
      app.use(app.router);
      app.use(express["static"](__dirname + '/../../www/public'));
      app.use(express.errorHandler({
        dumpExceptions: true,
        showStack: true
      }));
      app.set("view options", {
        layout: false
      });
      app.set('views', __dirname + '/../../www/views');
      app.set('view engine', 'ejs');
    });
    app.get('/info', this.process('info', this.main_controller));
  };

  FutonServer.prototype.start = function() {
    this.app.listen(config.LISTEN_PORT);
    return logger.info("Server is listening to " + config.LISTEN_PORT);
  };

  FutonServer.prototype.process = function(path, handler) {
    var _this = this;
    return function(req, res) {
      var fn_handler;
      try {
        fn_handler = function(req, res) {
          return handler[path](req, res);
        };
        return _this.parse_post_body(req, res, fn_handler);
      } catch (err) {
        logger.error("process Error", err);
        return res.json({
          error: true,
          reason: 'express error',
          message: err.message
        });
      }
    };
  };

  FutonServer.prototype.parse_post_body = function(req, res, callback) {
    var body_buffer;
    if (req.method === 'POST') {
      body_buffer = '';
      req.on('data', function(data) {
        return body_buffer += data;
      });
      return req.on('end', function() {
        var content_type;
        content_type = req.headers['content-type'];
        logger.debug("[Server] Content-Type: " + content_type);
        try {
          req.body = (function() {
            switch (content_type) {
              case "application/json":
              case "json":
                return JSON.parse(body_buffer);
              case "application/x-www-form-urlencoded":
                return querystring.parse(body_buffer);
              default:
                return body_buffer;
            }
          })();
          return callback(req, res);
        } catch (err) {
          logger.error("[Server] parse_post_body", err);
          if (err.type === 'unexpected_token') {
            logger.error("[Server] Illegal JSON String", body_buffer);
          }
          throw err;
        }
      });
    } else {
      return callback(req, res);
    }
  };

  return FutonServer;

})();

module.exports = FutonServer;
