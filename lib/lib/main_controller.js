// Generated by CoffeeScript 1.3.3
var MainController, RedisInterface;

RedisInterface = require('./redis_interface');

MainController = (function() {

  function MainController() {
    this.redis = new RedisInterface();
    this.routes = [
      {
        path: "/redis/info",
        http_method: "get",
        method: "redis_info"
      }, {
        path: "/redis/select/:db",
        http_method: "get",
        method: "redis_select"
      }, {
        path: "/redis/database",
        http_method: "get",
        method: "redis_database"
      }, {
        path: "/redis/keys/:_filter",
        http_method: "get",
        method: "redis_keys"
      }, {
        path: "/redis/keys",
        http_method: "get",
        method: "redis_keys"
      }, {
        path: "/redis/get/:key",
        http_method: "get",
        method: "redis_get"
      }, {
        path: "/redis/set",
        http_method: "post",
        method: "redis_set"
      }, {
        path: "/redis/command",
        http_method: "post",
        method: "redis_command"
      }
    ];
    return;
  }

  MainController.prototype.redis_info = function(req, res) {
    return this.redis.info(function(err, data) {
      return res.json(data);
    });
  };

  MainController.prototype.redis_select = function(req, res) {
    var db;
    logger.info("redis_select", req.params);
    db = req.params.db;
    return this.redis.select(db, function(err, data) {
      return res.json({
        err: err,
        resp: data
      });
    });
  };

  MainController.prototype.redis_database = function(req, res) {
    logger.info("redis_database", this.redis.database());
    return res.json({
      database: this.redis.database()
    });
  };

  MainController.prototype.redis_keys = function(req, res) {
    var filter, redis;
    logger.info("redis_keys", req.params._filter);
    filter = req.params._filter || "*";
    redis = this.redis;
    return this.redis.get_keys(filter, function(err, data) {
      return res.json({
        err: err,
        database: redis.database(),
        keys: data
      });
    });
  };

  MainController.prototype.redis_get = function(req, res) {
    var key;
    key = req.params.key;
    return this.redis.get(key, function(err, data) {
      return res.json({
        err: err,
        resp: data
      });
    });
  };

  MainController.prototype.redis_set = function(req, res) {
    return this.redis.set(req.body.key, req.body.value, function(err, data) {
      return res.json({
        err: err,
        resp: data
      });
    });
  };

  MainController.prototype.redis_command = function(req, res) {
    logger.info("redis_command", req.body);
    return this.redis.send_command(req.body.command, req.body.args, function(err, data) {
      return res.json({
        err: err,
        resp: data
      });
    });
  };

  return MainController;

})();

module.exports = MainController;
